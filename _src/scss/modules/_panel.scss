$panel-width: 320px;
$panel-expand-duration: 0.35s;
$panel-expand-scale: 50 / 320;

.panel {
	display: block;
	position: relative;
	overflow: hidden;
	width: 100%;
	color: white;
	text-decoration: none;
	transition: transform 0.35s ease-out;

	&:before,
	&:after {
		position: absolute;
		z-index: 3;
		top: 0;
		bottom: 0;
		width: 50%;
		background-color: rgba(0, 0, 0, 0.55);
		opacity: 0;
		transform: scaleX(1) translate3d(0, 0, 0);
		transition: opacity $panel-expand-duration, transform $panel-expand-duration;

		.is-hovered & {
			opacity: 1;
		}
	}

	&:before {
		left: 0;
		transform-origin: 100% 0;
	}

	&:after {
		right: 0;
		transform-origin: 0 0;
	}

	@include breakpoint-mediaquery(horizontal) {
		overflow: visible;
		width: $panel-width;

		&.is-expanded {
			&:before,
			&:after {
				opacity: 0;
				transform: scaleX(1 + $panel-expand-scale) translate3d(0, 0, 0);
			}
		}

		&.is-shrunk-left {
			&:after {
				transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0);
			}

			.is-transition-topostfrompanels & {
				width: $panel-width - ($panel-width * $panel-expand-scale * 0.5);
				margin-right: $panel-width * $panel-expand-scale * 0.5;

				&:after {
					transform: scaleX(1) translate3d(0, 0, 0);
					transition: none;
				}
			}
		}

		&.is-shrunk-right {
			&:before {
				transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0);
			}

			.is-transition-topostfrompanels & {
				width: $panel-width - ($panel-width * $panel-expand-scale * 0.5);
				margin-left: $panel-width * $panel-expand-scale * 0.5;

				&:before {
					transform: scaleX(1) translate3d(0, 0, 0);
					transition: none;
				}
			}
		}

		.is-introtransition &,
		.is-transition-panelsbelow & {
			transition: transform 0.5s ease-in-out 0.1s;

			@for $i from 2 through 10 {
				&:nth-child(#{$i}) {
					transition-delay: (0.1s + (0.05 * $i));
				}
			}
		}

		.js .is-intro.is-panels &,
		.is-hidebelow & {
			transform: translateY(100%);
		}

		.is-transition-topostfrompanels & {
			transition: transform 0.35s ease-out;
			transition-delay: 0s;
		}

		.is-transition-topanelsfrompost & {
			transition: none;
		}

		&:before,
		&:after {
			content: "";
		}
	}
}

.panel-content {
	display: absolute;
	z-index: 1;
	width: 100%;
	height: 100%;
	padding: 32px 30px 72px;
	font-size: 9px;
	background-color: inherit;
	transition: opacity 0.3s;

	&:before,
	&:after {
		position: absolute;
		z-index: 1;
		top: 0;
		bottom: 0;
		width: 50%;
		background-color: inherit;
		transform: scaleX(1) translate3d(0, 0, 0);
		transition: transform $panel-expand-duration;

		.is-expanded & {
			transform: scaleX(1 + $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	&:before {
		left: 0;
		transform-origin: 100% 0;

		.is-shrunk-right & {
			transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	&:after {
		right: 0;
		transform-origin: 0 0;

		.is-shrunk-left & {
			transform: scaleX(1 - $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	.no-touch & {
		padding-bottom: 100px;

		@include breakpoint-mediaquery(horizontal) {
			padding-bottom: 0;
		}
	}

	@include breakpoint-mediaquery(horizontal) {
		padding: 47px 40px 0;
		font-size: 10px;

		&:before,
		&:after {
			content: "";
		}

		.is-transition-topostfrompanels .is-expanded & {
			opacity: 0;
		}

		.is-transition-topanelsfrompost .is-transition-panel & {
			opacity: 0;
			transition: none;
		}

		.is-transition-topostfrompanels .is-shrunk-left & {
			padding-right: 40px - ($panel-width * $panel-expand-scale * 0.5);
		}

		.is-transition-topostfrompanels .is-shrunk-right & {
			padding-left: 40px - ($panel-width * $panel-expand-scale * 0.5);
		}
	}
}

.panel-date {
	position: relative;
	z-index: 2;
	padding: 0 2px;
	font-weight: 600;
	text-transform: uppercase;
}

.panel-headline {
	position: relative;
	z-index: 2;
	margin: 0 0 25px;
	font-size: convert-to-em(45px);
	line-height: 1;
	transform: translate3d(0, 0, 0); // TODO: resolved flickering when header closes. figure out compositing issues and remove this.
}

.panel-summary {
	position: relative;
	z-index: 2;
	font-size: convert-to-em(15px);
	line-height: 1.55;

	@include breakpoint-mediaquery(horizontal) {
		opacity: 0.5;
		transition: opacity $panel-expand-duration;

		.is-expanded & {
			opacity: 1;
		}
	}
}

.panel-read {
	position: absolute;
	z-index: 2;
	bottom: 81px;
	left: 0;
	width: 100%;

	&:before,
	&:after {
		position: absolute;
		z-index: 1;
		top: 0;
		width: 50%;
		height: 81px;
		background-color: rgba(0, 0, 0, 0.23);
		transform: translate3d(0, 100%, 0);
		transition: transform $panel-expand-duration;

		.is-expanded & {
			transform: scaleX(1 + $panel-expand-scale) translate3d(0, 0, 0);
		}
	}

	&:before {
		left: 0;
		transform-origin: 100% 0;
	}

	&:after {
		left: 50%;
		transform-origin: 0 0;
	}

	.no-touch & {
		&:before,
		&:after {
			content: "";
		}
	}

	@include breakpoint-mediaquery(horizontal) {
		&:before {
			.is-shrunk-right & {
				transform: scaleX(1 - $panel-expand-scale) translate3d(0, 100%, 0);
			}
		}

		&:after {
			.is-shrunk-left & {
				transform: scaleX(1 - $panel-expand-scale) translate3d(0, 100%, 0);
			}
		}
	}
}

.panel-read-text {
	position: absolute;
	z-index: 2;
	top: 34px;
	left: 30px;
	width: 100%;
	padding-left: 24px;

	&:before {
		position: absolute;
		top: -2px;
		left: 0;
		font-family: 'icons';
		font-size: 17px;
		text-transform: none;
		content: "v";
	}

	@include breakpoint-mediaquery(horizontal) {
		left: 40px;
	}
}
